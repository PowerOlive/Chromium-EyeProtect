From b98ad3eb512226df78e6b974717843f6ab021709 Mon Sep 17 00:00:00 2001
From: fengberd <admin@berd.moe>
Date: Fri, 2 Oct 2020 01:16:19 +0800
Subject: [PATCH 1/6] [Eye Protect] Add eye-protect flag

---
 chrome/browser/about_flags.cc                           | 3 +++
 chrome/browser/chromeos/login/chrome_restart_request.cc | 1 +
 chrome/browser/flag-metadata.json                       | 6 ++++++
 chrome/browser/flag_descriptions.cc                     | 4 ++++
 chrome/browser/flag_descriptions.h                      | 3 +++
 ui/base/pointer/touch_ui_controller.cc                  | 3 +++
 ui/base/pointer/touch_ui_controller.h                   | 2 ++
 ui/base/ui_base_switches.cc                             | 2 ++
 ui/base/ui_base_switches.h                              | 2 ++
 9 files changed, 26 insertions(+)

diff --git a/chrome/browser/about_flags.cc b/chrome/browser/about_flags.cc
index b1a12f28f5c0..ce7755fa59b6 100644
--- a/chrome/browser/about_flags.cc
+++ b/chrome/browser/about_flags.cc
@@ -2479,6 +2479,9 @@ const FeatureEntry kFeatureEntries[] = {
     {"top-chrome-touch-ui", flag_descriptions::kTopChromeTouchUiName,
      flag_descriptions::kTopChromeTouchUiDescription, kOsDesktop,
      MULTI_VALUE_TYPE(kTopChromeTouchUiChoices)},
+    {"eye-protection", flag_descriptions::kEyeProtectionName,
+     flag_descriptions::kEyeProtectionDescription, kOsDesktop,
+     SINGLE_VALUE_TYPE(switches::kEyeProtection)},
 #if BUILDFLAG(ENABLE_WEBUI_TAB_STRIP)
     {"webui-tab-strip", flag_descriptions::kWebUITabStripName,
      flag_descriptions::kWebUITabStripDescription, kOsDesktop,
diff --git a/chrome/browser/chromeos/login/chrome_restart_request.cc b/chrome/browser/chromeos/login/chrome_restart_request.cc
index d6c83202d32a..065768d4fe74 100644
--- a/chrome/browser/chromeos/login/chrome_restart_request.cc
+++ b/chrome/browser/chromeos/login/chrome_restart_request.cc
@@ -139,6 +139,7 @@ void DeriveCommandLine(const GURL& start_url,
     ::switches::kTouchDevices,
     ::switches::kTouchEventFeatureDetection,
     ::switches::kTopChromeTouchUi,
+    ::switches::kEyeProtection,
     ::switches::kTraceToConsole,
     ::switches::kUIDisablePartialSwap,
 #if defined(USE_CRAS)
diff --git a/chrome/browser/flag-metadata.json b/chrome/browser/flag-metadata.json
index 6d7baceb3d40..8e418779d699 100644
--- a/chrome/browser/flag-metadata.json
+++ b/chrome/browser/flag-metadata.json
@@ -4617,5 +4617,11 @@
       "chromeos-gfx-video@google.com"
     ],
     "expiry_milestone": 90
+  },
+  {
+    // I dont care the alpha order cuz this wont be commited to chromium project :/
+    "name": "eye-protection",
+    "owners": [ "admin@berd.moe" ],
+    "expiry_milestone": -1
   }
 ]
diff --git a/chrome/browser/flag_descriptions.cc b/chrome/browser/flag_descriptions.cc
index dedde6c53e90..91fef828cb4d 100644
--- a/chrome/browser/flag_descriptions.cc
+++ b/chrome/browser/flag_descriptions.cc
@@ -2305,6 +2305,10 @@ const char kTopChromeTouchUiName[] = "Touch UI Layout";
 const char kTopChromeTouchUiDescription[] =
     "Enables touch UI layout in the browser's top chrome.";
 
+const char kEyeProtectionName[] = "Eye Protection";
+const char kEyeProtectionDescription[] =
+    "Protect your eyes from being hurt by Material Disaster 2";
+
 const char kThreadedScrollingName[] = "Threaded scrolling";
 const char kThreadedScrollingDescription[] =
     "Threaded handling of scroll-related input events. Disabling this will "
diff --git a/chrome/browser/flag_descriptions.h b/chrome/browser/flag_descriptions.h
index ce9bf4b93c2a..537c9e5fffeb 100644
--- a/chrome/browser/flag_descriptions.h
+++ b/chrome/browser/flag_descriptions.h
@@ -1331,6 +1331,9 @@ extern const char kTintCompositedContentDescription[];
 extern const char kTopChromeTouchUiName[];
 extern const char kTopChromeTouchUiDescription[];
 
+extern const char kEyeProtectionName[];
+extern const char kEyeProtectionDescription[];
+
 extern const char kThreadedScrollingName[];
 extern const char kThreadedScrollingDescription[];
 
diff --git a/ui/base/pointer/touch_ui_controller.cc b/ui/base/pointer/touch_ui_controller.cc
index d91151b4433b..f0e374705d09 100644
--- a/ui/base/pointer/touch_ui_controller.cc
+++ b/ui/base/pointer/touch_ui_controller.cc
@@ -24,6 +24,8 @@
 
 namespace ui {
 
+bool TouchUiController::eye_protection = false;
+
 namespace {
 
 #if defined(OS_WIN)
@@ -77,6 +79,7 @@ TouchUiController* TouchUiController::Get() {
 
 TouchUiController::TouchUiController(TouchUiState touch_ui_state)
     : touch_ui_state_(touch_ui_state) {
+  eye_protection = base::CommandLine::ForCurrentProcess()->HasSwitch(switches::kEyeProtection);
 #if defined(OS_WIN)
   if (base::CurrentUIThread::IsSet() &&
       (base::win::GetVersion() >= base::win::Version::WIN10)) {
diff --git a/ui/base/pointer/touch_ui_controller.h b/ui/base/pointer/touch_ui_controller.h
index bcd93ac60e99..67d12d6ed90a 100644
--- a/ui/base/pointer/touch_ui_controller.h
+++ b/ui/base/pointer/touch_ui_controller.h
@@ -62,6 +62,8 @@ class COMPONENT_EXPORT(UI_BASE) TouchUiController {
            ((touch_ui_state_ == TouchUiState::kAuto) && tablet_mode_);
   }
 
+  static bool eye_protection;
+
   std::unique_ptr<Subscription> RegisterCallback(
       const base::RepeatingClosure& closure);
 
diff --git a/ui/base/ui_base_switches.cc b/ui/base/ui_base_switches.cc
index 384150dcdaa2..2c282f146e3e 100644
--- a/ui/base/ui_base_switches.cc
+++ b/ui/base/ui_base_switches.cc
@@ -88,6 +88,8 @@ const char kTopChromeTouchUiAuto[] = "auto";
 const char kTopChromeTouchUiDisabled[] = "disabled";
 const char kTopChromeTouchUiEnabled[] = "enabled";
 
+const char kEyeProtection[] = "eye-protection";
+
 // Disable partial swap which is needed for some OpenGL drivers / emulators.
 const char kUIDisablePartialSwap[] = "ui-disable-partial-swap";
 
diff --git a/ui/base/ui_base_switches.h b/ui/base/ui_base_switches.h
index 07ce187cebd7..2730f34f4fbc 100644
--- a/ui/base/ui_base_switches.h
+++ b/ui/base/ui_base_switches.h
@@ -42,6 +42,8 @@ COMPONENT_EXPORT(UI_BASE) extern const char kUseSystemClipboard[];
 COMPONENT_EXPORT(UI_BASE) extern const char kDisallowNonExactResourceReuse[];
 COMPONENT_EXPORT(UI_BASE) extern const char kMangleLocalizedStrings[];
 
+COMPONENT_EXPORT(UI_BASE) extern const char kEyeProtection[];
+
 }  // namespace switches
 
 #endif  // UI_BASE_UI_BASE_SWITCHES_H_
-- 
2.28.0.windows.1

