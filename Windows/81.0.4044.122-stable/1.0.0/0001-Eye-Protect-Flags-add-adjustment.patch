From fd509d1ca420d99c1d377c78000b2b5ef26d2adc Mon Sep 17 00:00:00 2001
From: fengberd <admin@berd.moe>
Date: Wed, 22 Apr 2020 11:36:31 +0800
Subject: [PATCH 1/6] [Eye Protect] Flags add & adjustment

---
 chrome/browser/about_flags.cc                         |  3 +++
 .../browser/chromeos/login/chrome_restart_request.cc  |  1 +
 chrome/browser/flag-metadata.json                     | 11 ++++++++---
 chrome/browser/flag_descriptions.cc                   |  4 ++++
 chrome/browser/flag_descriptions.h                    |  3 +++
 ui/base/material_design/material_design_controller.cc |  2 ++
 ui/base/material_design/material_design_controller.h  |  4 ++++
 ui/base/ui_base_switches.cc                           |  2 ++
 ui/base/ui_base_switches.h                            |  2 ++
 9 files changed, 29 insertions(+), 3 deletions(-)

diff --git a/chrome/browser/about_flags.cc b/chrome/browser/about_flags.cc
index cce40c115b4e..fc75666704d1 100644
--- a/chrome/browser/about_flags.cc
+++ b/chrome/browser/about_flags.cc
@@ -1783,6 +1783,9 @@ const FeatureEntry kFeatureEntries[] = {
     {"top-chrome-touch-ui", flag_descriptions::kTopChromeTouchUiName,
      flag_descriptions::kTopChromeTouchUiDescription, kOsDesktop,
      MULTI_VALUE_TYPE(kTopChromeTouchUiChoices)},
+    {"eye-protection", flag_descriptions::kEyeProtectionName,
+     flag_descriptions::kEyeProtectionDescription, kOsDesktop,
+     SINGLE_VALUE_TYPE(switches::kEyeProtection)},
 #if BUILDFLAG(ENABLE_WEBUI_TAB_STRIP)
     {"webui-tab-strip", flag_descriptions::kWebUITabStripName,
      flag_descriptions::kWebUITabStripDescription, kOsDesktop,
diff --git a/chrome/browser/chromeos/login/chrome_restart_request.cc b/chrome/browser/chromeos/login/chrome_restart_request.cc
index f65190649f0b..bd812d2cf1ab 100644
--- a/chrome/browser/chromeos/login/chrome_restart_request.cc
+++ b/chrome/browser/chromeos/login/chrome_restart_request.cc
@@ -143,6 +143,7 @@ void DeriveCommandLine(const GURL& start_url,
     ::switches::kTouchDevices,
     ::switches::kTouchEventFeatureDetection,
     ::switches::kTopChromeTouchUi,
+    ::switches::kEyeProtection,
     ::switches::kTraceToConsole,
     ::switches::kUIDisablePartialSwap,
 #if defined(USE_CRAS)
diff --git a/chrome/browser/flag-metadata.json b/chrome/browser/flag-metadata.json
index d1ed1f6d7b39..670a18971053 100644
--- a/chrome/browser/flag-metadata.json
+++ b/chrome/browser/flag-metadata.json
@@ -2932,17 +2932,17 @@
   {
     "name": "omnibox-ui-hide-steady-state-url-path-query-and-ref",
     "owners": [ "tommycli", "chrome-omnibox-team@google.com" ],
-    "expiry_milestone": 76
+    "expiry_milestone": -1
   },
   {
     "name": "omnibox-ui-hide-steady-state-url-scheme",
     "owners": [ "tommycli", "chrome-omnibox-team@google.com" ],
-    "expiry_milestone": 76
+    "expiry_milestone": -1
   },
   {
     "name": "omnibox-ui-hide-steady-state-url-trivial-subdomains",
     "owners": [ "tommycli", "chrome-omnibox-team@google.com" ],
-    "expiry_milestone": 76
+    "expiry_milestone": -1
   },
   {
     "name": "omnibox-ui-max-autocomplete-matches",
@@ -3803,5 +3803,10 @@
     "name": "zero-state-files",
     "owners": [ "tby", "jiameng" ],
     "expiry_milestone": 82
+  },
+  { // I dont care about the alpha order cuz this wont be commited to chromium project :/
+    "name": "eye-protection",
+    "owners": [ "admin@berd.moe" ],
+    "expiry_milestone": -1
   }
 ]
diff --git a/chrome/browser/flag_descriptions.cc b/chrome/browser/flag_descriptions.cc
index 450fe32735b8..95721558e5a3 100644
--- a/chrome/browser/flag_descriptions.cc
+++ b/chrome/browser/flag_descriptions.cc
@@ -1955,6 +1955,10 @@ const char kTopChromeTouchUiName[] = "Touch UI Layout";
 const char kTopChromeTouchUiDescription[] =
     "Enables touch UI layout in the browser's top chrome.";
 
+const char kEyeProtectionName[] = "Eye Protection";
+const char kEyeProtectionDescription[] =
+    "Protect your eyes from being hurt by Material Disaster 2";
+
 const char kThreadedScrollingName[] = "Threaded scrolling";
 const char kThreadedScrollingDescription[] =
     "Threaded handling of scroll-related input events. Disabling this will "
diff --git a/chrome/browser/flag_descriptions.h b/chrome/browser/flag_descriptions.h
index 2bad3bd2cac8..441e02af5d57 100644
--- a/chrome/browser/flag_descriptions.h
+++ b/chrome/browser/flag_descriptions.h
@@ -1133,6 +1133,9 @@ extern const char kTLS13HardeningForLocalAnchorsDescription[];
 extern const char kTopChromeTouchUiName[];
 extern const char kTopChromeTouchUiDescription[];
 
+extern const char kEyeProtectionName[];
+extern const char kEyeProtectionDescription[];
+
 extern const char kThreadedScrollingName[];
 extern const char kThreadedScrollingDescription[];
 
diff --git a/ui/base/material_design/material_design_controller.cc b/ui/base/material_design/material_design_controller.cc
index 66d19acac3e3..136cce8b3b00 100644
--- a/ui/base/material_design/material_design_controller.cc
+++ b/ui/base/material_design/material_design_controller.cc
@@ -51,11 +51,13 @@ void TabletModeWatcherWinProc(HWND hwnd,
 #endif  // defined(OS_WIN)
 
 bool MaterialDesignController::touch_ui_ = false;
+bool MaterialDesignController::eye_protection_ = false;
 bool MaterialDesignController::automatic_touch_ui_ = false;
 
 // static
 void MaterialDesignController::Initialize() {
   base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
+  eye_protection_ = command_line->HasSwitch(switches::kEyeProtection);
   const std::string switch_value =
       command_line->GetSwitchValueASCII(switches::kTopChromeTouchUi);
   bool touch = switch_value == switches::kTopChromeTouchUiEnabled;
diff --git a/ui/base/material_design/material_design_controller.h b/ui/base/material_design/material_design_controller.h
index 2ec2d5f631a9..2500616bce16 100644
--- a/ui/base/material_design/material_design_controller.h
+++ b/ui/base/material_design/material_design_controller.h
@@ -33,6 +33,8 @@ class UI_BASE_EXPORT MaterialDesignController {
   // Initializes touch UI state based on command-line flags.
   static void Initialize();
 
+  static bool eye_protection() { return eye_protection_; }
+
   static bool touch_ui() { return touch_ui_; }
 
   // Exposed for TabletModePageBehavior on ChromeOS + ash.
@@ -56,6 +58,8 @@ class UI_BASE_EXPORT MaterialDesignController {
   // Whether the UI layout should be touch-optimized.
   static bool touch_ui_;
 
+  static bool eye_protection_;
+
   // Whether |touch_ui_| should toggle on and off depending on the tablet state.
   static bool automatic_touch_ui_;
 
diff --git a/ui/base/ui_base_switches.cc b/ui/base/ui_base_switches.cc
index e74239ee549e..c87c1ffc8cc9 100644
--- a/ui/base/ui_base_switches.cc
+++ b/ui/base/ui_base_switches.cc
@@ -95,6 +95,8 @@ const char kTopChromeTouchUiAuto[] = "auto";
 const char kTopChromeTouchUiDisabled[] = "disabled";
 const char kTopChromeTouchUiEnabled[] = "enabled";
 
+const char kEyeProtection[] = "eye-protection";
+
 // Disable partial swap which is needed for some OpenGL drivers / emulators.
 const char kUIDisablePartialSwap[] = "ui-disable-partial-swap";
 
diff --git a/ui/base/ui_base_switches.h b/ui/base/ui_base_switches.h
index 9a0c356de262..4ddd46770bab 100644
--- a/ui/base/ui_base_switches.h
+++ b/ui/base/ui_base_switches.h
@@ -44,6 +44,8 @@ UI_BASE_EXPORT extern const char kUseSystemClipboard[];
 UI_BASE_EXPORT extern const char kDisallowNonExactResourceReuse[];
 UI_BASE_EXPORT extern const char kMangleLocalizedStrings[];
 
+UI_BASE_EXPORT extern const char kEyeProtection[];
+
 }  // namespace switches
 
 #endif  // UI_BASE_UI_BASE_SWITCHES_H_
-- 
2.24.1.windows.2

